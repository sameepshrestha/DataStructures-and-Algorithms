# -*- coding: utf-8 -*-
"""Deque with List in Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-GYpPO6n1FA7ozxXp7ImXdkMsznfPhCg
"""

class DequeSequence:
  def __init__(self):
    self.array =[]
    self.head = None
    self.tail= None
    self.size = None
    self.length = None
  def __len__(self): return self.length

  def build(self,x):
    self.length = len(x)
    self.size=3*self.length
    self.array = [None]*(3*self.size)
    self.head = self.length
    self.tail = 2*self.length
    self.array[self.head:self.tail] = x

  def insert_first(self,x):
    if self.head==0:
      self.resize()
    self.head-=1
    self.array[self.head] = x
    self.length+=1

  def insert_last(self,x):
    if self.tail==self.size-1:
      self.resize()
    self.tail+=1
    self.array[self.tail]=x   
    self.length+=1
  
  def get_index(self,i):
    if i>=self.length or i<0: return IndexError("Index does not exist")
    return self.array[self.head+i]
    
  def resize(self):
      new_size =self.length*3
      new_array = [None] * new_size
      new_array[self.length:2 * self.length] = self.array[self.head:self.tail]
      self.head = self.length
      self.tail = 2 * self.length
      self.array = new_array
      self.size = new_size
  
  def pop_first(self):
    if self.length == 0:
        raise IndexError("The deque is empty")
    value = self.array[self.head]
    self.array[self.head] = None
    self.head += 1
    self.length -= 1
    if self.length<self.size/6:
      self.resize()
    return value

  def pop_last(self):
      if self.length == 0:
          raise IndexError("The deque is empty")
      value = self.array[self.tail]
      self.array[self.tail] = None
      self.tail -= 1
      self.length -= 1
      if self.length *4 < self.size:
        self.resize()
      return value

a =DequeSequence()
a.build([1,2,3])
a.get_index(3)

a.get_index(-1)

a.get_index(0)

a.pop_first()

a.get_index(2)

